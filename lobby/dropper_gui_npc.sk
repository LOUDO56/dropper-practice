import:
	java.util.Date
	java.text.SimpleDateFormat
	java.lang.System
	org.bukkit.entity.Player
	org.bukkit.Bukkit
	org.bukkit.Location
	org.bukkit.Material


function dropper_gui_npc(p: player, type: string, page: number):
	if {_type} = "main_menu":
		set {_lore_1::*} to split yaml value "mainlobby.gui.main_menu.change_map_1" from {dropper::player::%uuid of {_p}%::language} at "||"
		set {_lore_2::*} to split yaml value "mainlobby.gui.main_menu.change_map_2" from {dropper::player::%uuid of {_p}%::language} at "||"
		loop {dropper::player::%uuid of {_p}%::maps_order::*}:
			add "&a- &e%{dropper::map::%loop-value%::name}%" to {_map_p::*}
		create gui with virtual chest inventory named "Dropper Practice" with 6 rows:
			make gui slot 11 to book named yaml value "mainlobby.gui.main_menu.change_map_name" from {dropper::player::%uuid of {_p}%::language} with lore {_lore_1::*}, {_map_p::*} and {_lore_2::*}:
				dropper_gui_npc({_p}, "change_map", 1)
			make gui slot 31 to feather named yaml value "mainlobby.gui.main_menu.play_name" from {dropper::player::%uuid of {_p}%::language} with lore "" and yaml value "mainlobby.gui.main_menu.play_lore" from {dropper::player::%uuid of {_p}%::language}:
				dropper_play({_p}, "classic")
			make gui slot 13 to golden pickaxe with no nbt named yaml value "mainlobby.gui.main_menu.practice_name" from {dropper::player::%uuid of {_p}%::language} with lore "" and yaml value "mainlobby.gui.main_menu.practice_lore" from {dropper::player::%uuid of {_p}%::language}:
				dropper_gui_npc({_p}, "practice", 1)

			make gui slot 15 to golden axe with no nbt named yaml value "mainlobby.gui.main_menu.skip_portal_name" from {dropper::player::%uuid of {_p}%::language} with lore "" and yaml value "mainlobby.gui.main_menu.skip_portal_lore" from {dropper::player::%uuid of {_p}%::language}:
				dropper_gui_npc({_p}, "skip_portal", 1)
			make gui slot 49 to barrier named yaml value "mainlobby.gui.close" from {dropper::player::%uuid of {_p}%::language}:
				close {_p}'s inventory
			make gui slot 53 with book named "&b&lDROPPER LEGACY" with lore "", "&7Seperated world with legacy maps on it.", "&7Click to join":
				set {dropper::player::%{_p}'s uuid%::legacy-state} to true
				teleport {_p} to {dropper::mainlobby-legacy::spawn}
				mainlobby_join({_p}, {dropper::player::%uuid of {_p}%::language})

	else:
		
		# ------------------- Parameters before slots ------------------- #

		if {_page} = 1:
			set {_mapset} to "Fantasy"
		else if {_page} = 2:
			set {_mapset} to "Abstract"
		else if {_page} = 3:
			set {_mapset} to "Landscape"
		else if {_page} = 4:
			set {_mapset} to "Futuristic"

		set {_map::*} to {dropper::mapset::%{_mapset} in lowercase%::*}

		loop {_map::*}:
			set {_map::%loop-index%} to {_map::%loop-index%} in lowercase
		set {_map::*} to alphabetically sorted {_map::*}
		loop {_map::*} where [{dropper::map::%input%::difficulty} = "&aEasy"]:
			add loop-value to {_easy::*}
		loop {_map::*} where [{dropper::map::%input%::difficulty} = "&eMedium"]:
			add loop-value to {_med::*}
		loop {_map::*} where [{dropper::map::%input%::difficulty} = "&cHard"]:
			add loop-value to {_hard::*}
		loop {_easy::*}, {_med::*} and {_hard::*}:
			if {_type} = "map_pb":
				if {dropper::player::%{_p}'s uuid%::filter_map_pb} is "completed":
					if {dropper::player::%uuid of {_p}%::stats::pb::%loop-value%} is not set:
						remove loop-value from {_easy::*}
						remove loop-value from {_med::*}
						remove loop-value from {_hard::*}
				else if {dropper::player::%{_p}'s uuid%::filter_map_pb} is "uncompleted":
					if {dropper::player::%uuid of {_p}%::stats::pb::%loop-value%} is set:
						remove loop-value from {_easy::*}
						remove loop-value from {_med::*}
						remove loop-value from {_hard::*}
			set {_name.%loop-value%} to {dropper::map::%loop-value%::name}
			if {dropper::map::%loop-value%::difficulty} = "&aEasy":
				set {_item.%loop-value%} to lime stained clay
				set {_color.%loop-value%} to "&a"
			else if {dropper::map::%loop-value%::difficulty} = "&eMedium":
				set {_item.%loop-value%} to yellow stained clay
				set {_color.%loop-value%} to "&e"
			else:
				set {_item.%loop-value%} to red stained clay
				set {_color.%loop-value%} to "&c"
			
		if {_type} = "change_map":
			set {_row} to 6
			set {_barrier-name} to yaml value "mainlobby.gui.change_map.cancel_name" from {dropper::player::%uuid of {_p}%::language}
			set {_name-gui} to "Change Map List"
		else:
			set {_row} to 5
			set {_barrier-name} to yaml value "mainlobby.gui.practice.return" from {dropper::player::%uuid of {_p}%::language}
			if {_type} = "practice":
				set {_name-gui} to "Practice"
			else if {_type} = "skip_portal":
				set {_name-gui} to "Portal Skip"
			else if {_type} = "map_pb":
				set {_name-gui} to "Map personal best"

		create gui with virtual chest inventory named "%{_name-gui}% - %{_mapset}%" with {_row} rows:
			
			set {_slot_glass::*} to 0, 1, 2, 3, 4, 5, 6, 7, 8, 17, 26, 35, 44, 43, 42, 41, 40, 39, 38, 37, 36, 27, 18 and 9

			if {_mapset} = "Fantasy":
				set {_glass-color} to light green stained glass pane
			else if {_mapset} = "Abstract":
				set {_glass-color} to red stained glass pane
			else if {_mapset} = "Landscape":
				set {_glass-color} to yellow stained glass pane
			else if {_mapset} = "Futuristic":
				set {_glass-color} to gray stained glass pane

			make gui slot {_slot_glass::*} with {_glass-color} named " "

			# ------------------- Parameters for slots ------------------- #

			if {_type} = "change_map": # Map chosen place
				make gui slot 46 with white stained glass pane named "" 
				make gui slot 52 with white stained glass pane named ""
				set {_slot_map_choosen} to 47
				set {_map_choose} to 1
				loop {dropper::player::%uuid of {_p}%::temp_map_order::*}:
					add "&a- &e%{dropper::map::%loop-value%::name}%" to {_map_p::*}
					if {dropper::map::%loop-value%::difficulty} = "&aEasy":
						set {_item} to lime stained clay
						set {_color} to "&a"
					else if {dropper::map::%loop-value%::difficulty} = "&eMedium":
						set {_item} to yellow stained clay
						set {_color} to "&e"
					else:
						set {_item} to red stained clay
						set {_color} to "&c"
					make gui slot {_slot_map_choosen} with {_item} named "&e%{_map_choose}%. %{_color}%%{dropper::map::%loop-value%::name}%" with lore "&7From &6%{dropper::player::%uuid of {_p}%::temp_map_order.map_set::%loop-value%}%"
					add 1 to {_slot_map_choosen}
					add 1 to {_map_choose}
				
				if size of {dropper::player::%uuid of {_p}%::temp_map_order::*} = 5:
					set {_lore_1::*} to split yaml value "mainlobby.gui.change_map.save_list_lore_1" from {dropper::player::%uuid of {_p}%::language} at "||"
					set {_lore_2::*} to split yaml value "mainlobby.gui.change_map.save_list_lore_2" from {dropper::player::%uuid of {_p}%::language} at "||"
					make gui slot 4 with book named yaml value "mainlobby.gui.change_map.save_list_name" from {dropper::player::%uuid of {_p}%::language} with lore {_lore_1::*}, {_map_p::*} and {_lore_2::*}:
						if {dropper::duel::player::%{_p}%::setting-maps} is not set:
							set {dropper::player::%uuid of {_p}%::maps_order::*} to {dropper::player::%uuid of {_p}%::temp_map_order::*}
						clear {dropper::player::%uuid of {_p}%::temp_map_order::*}
						send yaml value "mainlobby.gui.change_map.save_applied" from {dropper::player::%uuid of {_p}%::language} to {_p}
						send {_map_p::*} to {_p}
						play sound "random.levelup" with volume 0.7 to {_p}
						mainlobby_join({_p}, {dropper::player::%uuid of {_p}%::language})
						dropper_gui_npc({_p}, "main_menu", 0)

			else if {_type} = "skip_portal":
				if size of {dropper::player::%uuid of {_p}%::map-portal-skip::*} = 2:
					loop {dropper::player::%uuid of {_p}%::map-portal-skip::*}:
						add "&a- &e%{dropper::map::%loop-value%::name}%" to {_map_p::*}
					set {_lore_1::*} to split yaml value "mainlobby.gui.skip_portal.save_list_lore_1" from {dropper::player::%uuid of {_p}%::language} at "||"
					set {_lore_2::*} to split yaml value "mainlobby.gui.skip_portal.save_list_lore_2" from {dropper::player::%uuid of {_p}%::language} at "||"
					make gui slot 4 with feather named yaml value "mainlobby.gui.skip_portal.portal_name" from {dropper::player::%uuid of {_p}%::language} with lore {_lore_1::*}, {_map_p::*} and {_lore_2::*}:
						dropper_play({_p}, "skip_portal")
			else if {_type} = "map_pb":
				if {dropper::player::%{_p}'s uuid%::filter_map_pb} is not set:
					set {dropper::player::%{_p}'s uuid%::filter_map_pb} to "both"
				
				if {dropper::player::%{_p}'s uuid%::filter_map_pb} is "both":
					set {_item-filter} to lime dye
					set {_lore-filter::*} to "&8=> &aBoth", "&6Uncompleted", "&eCompleted"
				if {dropper::player::%{_p}'s uuid%::filter_map_pb} is "uncompleted":
					set {_item-filter} to orange dye
					set {_lore-filter::*} to "&aBoth", "&8=> &6Uncompleted", "&eCompleted"
				if {dropper::player::%{_p}'s uuid%::filter_map_pb} is "completed":
					set {_item-filter} to yellow dye
					set {_lore-filter::*} to "&aBoth", "&6Uncompleted", "&8=> &eCompleted"
				
				make gui slot 8 with {_item-filter} named "&6Filter" with lore "", {_lore-filter::*}, "" and "&7Click to change":
					if {_item-filter} = lime dye:
						set {dropper::player::%{_p}'s uuid%::filter_map_pb} to "uncompleted"
					else if {_item-filter} = orange dye:
						set {dropper::player::%{_p}'s uuid%::filter_map_pb} to "completed"
					else if {_item-filter} = yellow dye:
						set {dropper::player::%{_p}'s uuid%::filter_map_pb} to "both"
					dropper_gui_npc({_p}, {_type}, {_page})

			make gui slot 10 with lime dye block named "&aEasy" with lore "&7Easy map from %{_mapset}%." and "&7Click to interact!"
			make gui slot 19 with yellow dye named "&eMedium" with lore "&7Medium map from %{_mapset}%." and "&7Click to interact!"
			make gui slot 28 with red dye  named "&cHard" with lore "&7Hard map from %{_mapset}%." and "&7Click to interact!"
			
			set {_slot} to 11
			loop {_easy::*}, {_med::*}, {_hard::*}:
				
				set {_map} to loop-value

				if {_slot} < 17:
					if {dropper::map::%loop-value%::difficulty} = "&eMedium":
						set {_slot} to 20
				if {_slot} < 26:
					if {dropper::map::%loop-value%::difficulty} = "&cHard":
						set {_slot} to 29

				if {_type} = "change_map":
					set {_lore} to yaml value "mainlobby.gui.main_menu.change_map_add" from {dropper::player::%uuid of {_p}%::language}
					if {dropper::player::%uuid of {_p}%::temp_map_order::*} contains {_map}:
						enchant {_item.%loop-value%} with sharpness 1
						set {_lore} to yaml value "mainlobby.gui.main_menu.change_map_remove" from {dropper::player::%uuid of {_p}%::language}

									
				else if {_type} = "skip_portal":
					set {_lore} to yaml value "mainlobby.gui.main_menu.change_map_add" from {dropper::player::%uuid of {_p}%::language}
					if {dropper::player::%uuid of {_p}%::map-portal-skip::*} contains {_map}:
						enchant {_item.%loop-value%} with sharpness 1
						set {_lore} to yaml value "mainlobby.gui.main_menu.change_map_remove" from {dropper::player::%uuid of {_p}%::language}

				else if {_type} = "practice":
					set {_lore} to yaml value "mainlobby.gui.practice.map_lore_can" from {dropper::player::%uuid of {_p}%::language}
					if {dropper::player::%uuid of {_p}%::timer-practice} is not set:
						set {_statue} to yaml value "mainlobby.gui.practice.statue_disabled" from {dropper::player::%uuid of {_p}%::language}
						set {_item} to gray dye
					else:
						set {_statue} to yaml value "mainlobby.gui.practice.statue_enabled" from {dropper::player::%uuid of {_p}%::language}
						set {_item} to lime dye
					make gui slot 4 with {_item} named yaml value "mainlobby.gui.practice.timer_name" from {dropper::player::%uuid of {_p}%::language} with lore split send_yaml("mainlobby", "gui.practice.timer_lore", "%%statue%%", {_statue}, {dropper::player::%uuid of {_p}%::language}) at "||":
						if {dropper::player::%uuid of {_p}%::timer-practice} is not set:
							set {dropper::player::%uuid of {_p}%::timer-practice} to true
						else:
							clear {dropper::player::%uuid of {_p}%::timer-practice}
						dropper_gui_npc({_p}, "practice", {_page})

					if {dropper::in-game::player::%{_p}%::practice-map} = {_map}:
						enchant {_item.%loop-value%} with sharpness 1
						set {_lore} to yaml value "mainlobby.gui.practice.map_lore_cant" from {dropper::player::%uuid of {_p}%::language}
				
				else if {_type} = "map_pb":
					set {_pb} to "&b%{dropper::player::%uuid of {_p}%::stats::pb::%loop-value%}%"
					if {dropper::player::%uuid of {_p}%::stats::pb::%loop-value%} is not set:
						set {_pb} to "&cNone"
					set {_lore} to "&e- %{_pb}%"


				make gui slot {_slot} with {_item.%loop-value%} with no nbt named "%{_color.%loop-value%}%%{dropper::map::%loop-value%::name}%" with lore "" and {_lore}:
					
					# ------------------- Parameters for events ------------------- #

					if {_type} = "change_map":
						if {dropper::player::%uuid of {_p}%::temp_map_order::*} don't contain {_map}:
							if size of {dropper::player::%uuid of {_p}%::temp_map_order::*} < 5:
								add {_map} to {dropper::player::%uuid of {_p}%::temp_map_order::*}
								set {dropper::player::%uuid of {_p}%::temp_map_order.map_set::%{_map}%} to {_mapset}
						else:
							remove {_map} from {dropper::player::%uuid of {_p}%::temp_map_order::*}
							set {_currentMap::*} to {dropper::player::%uuid of {_p}%::temp_map_order::*}
							clear {dropper::player::%uuid of {_p}%::temp_map_order::*}
							loop {_currentMap::*}:
								add loop-value to {dropper::player::%uuid of {_p}%::temp_map_order::*}
						dropper_gui_npc({_p}, "change_map", {_page})
						
					else if {_type} = "practice": 
						if {dropper::in-game::player::%{_p}%::practice-map} is not {_map}:
							close {_p}'s inventory
							make player execute command "/dropper practice %{_map}%"
							set {dropper::in-game::player::%{_p}%::page} to {_page}

					else if {_type} = "skip_portal":
						if {dropper::player::%uuid of {_p}%::map-portal-skip::*} don't contain {_map}:
							if size of {dropper::player::%uuid of {_p}%::map-portal-skip::*} = 2:
								remove last element of {dropper::player::%uuid of {_p}%::map-portal-skip::*} from {dropper::player::%uuid of {_p}%::map-portal-skip::*}
								set {_currentMap::*} to {dropper::player::%uuid of {_p}%::map-portal-skip::*}
								clear {dropper::player::%uuid of {_p}%::map-portal-skip::*}
								loop {_currentMap::*}:
									add loop-value to {dropper::player::%uuid of {_p}%::map-portal-skip::*}
							add {_map} to {dropper::player::%uuid of {_p}%::map-portal-skip::*}
								
						else:
							remove {_map} from {dropper::player::%uuid of {_p}%::map-portal-skip::*}
							set {_currentMap::*} to {dropper::player::%uuid of {_p}%::map-portal-skip::*}
							clear {dropper::player::%uuid of {_p}%::map-portal-skip::*}
							loop {_currentMap::*}:
								add loop-value to {dropper::player::%uuid of {_p}%::map-portal-skip::*}
						dropper_gui_npc({_p}, "skip_portal", {_page})

				add 1 to {_slot}
				if {_slot} = 17:
					set {_slot} to 20
				else if {_slot} = 26:
					set {_slot} to 29

			make gui slot 0 with barrier named {_barrier-name}:
				if {_type} = "change_map":
					clear {dropper::player::%uuid of {_p}%::temp_map_order::*}
					clear {dropper::player::%uuid of {_p}%::temp_map_order.map_set::*}
					clear {dropper::player::%uuid of {_p}%::editing_map_select}
				if {_type} != "map_pb":
					dropper_gui_npc({_p}, "main_menu", -1)
				else:
					dropper_stat_menu({_p})
				
			if {_page} < 4:
				make gui slot 44 with arrow named "&9Page %{_page}+1%":
					dropper_gui_npc({_p}, {_type}, ({_page}+1))
			if {_page} > 1:
				make gui slot 36 with arrow named "&9Page %{_page}-1%":
					dropper_gui_npc({_p}, {_type}, ({_page}-1))

			run on gui close:
				wait 1 tick
				if {_p} doesn't have a gui open:
					clear {dropper::player::%uuid of {_p}%::temp_map_order::*}
					clear {dropper::player::%uuid of {_p}%::editing_map_select}
					clear {dropper::player::%uuid of {_p}%::temp_map_order.index}
			
				
	open last created gui to {_p}